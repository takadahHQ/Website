# Generated by Django 4.1.2 on 2022-10-15 03:33

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name_plural": "authors",
            },
        ),
        migrations.CreateModel(
            name="Categories",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
            ],
            options={
                "verbose_name_plural": "categories",
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("position", models.IntegerField()),
                ("slug", models.SlugField(null=True, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("text", ckeditor_uploader.fields.RichTextUploadingField()),
                ("authors_note", ckeditor.fields.RichTextField(blank=True, null=True)),
                ("words", models.IntegerField(blank=True, null=True)),
                ("released_at", models.DateTimeField()),
                (
                    "edited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="editor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "chapters",
            },
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category",
                        to="stories.categories",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "characters",
            },
        ),
        migrations.CreateModel(
            name="Editor",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name_plural": "editors",
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("description", ckeditor.fields.RichTextField(blank=True, null=True)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
            ],
            options={
                "verbose_name_plural": "genres",
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
                ("code", models.CharField(max_length=255)),
                ("native_name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "languages",
            },
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("description", ckeditor.fields.RichTextField(blank=True, null=True)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
            ],
            options={
                "verbose_name_plural": "ratings",
            },
        ),
        migrations.CreateModel(
            name="Type",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
            ],
            options={
                "verbose_name_plural": "types",
            },
        ),
        migrations.CreateModel(
            name="Universe",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=30, null=True, unique=True)),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stories.categories",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "universes",
            },
        ),
        migrations.CreateModel(
            name="Stories",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(null=True, unique=True)),
                ("abbreviation", models.CharField(max_length=15, unique=True)),
                ("summary", ckeditor.fields.RichTextField(verbose_name="synopsis")),
                (
                    "cover",
                    models.ImageField(
                        blank=True, max_length=255, null=True, upload_to=""
                    ),
                ),
                ("released_at", models.DateTimeField()),
                ("featured", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("abandoned", "Abandoned"),
                            ("complete", "Complete"),
                            ("haitus", "Haitus"),
                            ("prerelease", "Pre-Released"),
                            ("published", "Published"),
                            ("oneshot", "One Shot"),
                            ("ongoing", "Ongoing"),
                            ("draft", "Draft"),
                        ],
                        default="draft",
                        max_length=100,
                    ),
                ),
                (
                    "author",
                    models.ManyToManyField(
                        blank=True,
                        related_name="authors",
                        through="stories.Author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "characters",
                    models.ManyToManyField(
                        blank=True, related_name="names", to="stories.character"
                    ),
                ),
                (
                    "dislikes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="story_dislike",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "editor",
                    models.ManyToManyField(
                        blank=True,
                        related_name="editors",
                        through="stories.Editor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "following",
                    models.ManyToManyField(
                        blank=True,
                        related_name="story_followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("genre", models.ManyToManyField(blank=True, to="stories.genre")),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stories.language",
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="story_likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rating",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="stories.rating",
                    ),
                ),
                (
                    "story_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="stories.type"
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "stories",
            },
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapter",
                        to="stories.chapter",
                    ),
                ),
                (
                    "story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="stories.stories",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "bookmarks",
            },
        ),
        migrations.AddField(
            model_name="editor",
            name="story",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="editor_stories",
                to="stories.stories",
            ),
        ),
        migrations.AddField(
            model_name="editor",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="editor_user",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="story",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="story",
                to="stories.stories",
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="story",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stories.stories"
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="categories",
            name="category_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="stories.type",
            ),
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookmarked",
                        to="stories.stories",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "bookmarks",
            },
        ),
        migrations.AddField(
            model_name="author",
            name="story",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="author_stories",
                to="stories.stories",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="author_user",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
